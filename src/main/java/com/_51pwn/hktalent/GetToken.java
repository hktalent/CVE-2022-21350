package com._51pwn.hktalent;

import javax.crypto.*;
import javax.crypto.spec.SecretKeySpec;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.SecureRandom;
public class GetToken {

    public static void main(String[] args) {
        String access_token = encrypt("2ad1b008-38ed-44e4-a113-ef1ee31407c1|L68GFSAH3EBT|"+ System.currentTimeMillis() +"|1","youkongjian");
        System.out.print(access_token);
    }
    public static String encrypt(String var0, String var1) {
        byte[] var2 = null;

        try {
            KeyGenerator var3 = KeyGenerator.getInstance("AES");
            SecureRandom var4 = SecureRandom.getInstance("SHA1PRNG");
            var4.setSeed(var1.getBytes());
            var3.init(128, var4);
            SecretKey var5 = var3.generateKey();
            byte[] var6 = var5.getEncoded();
            SecretKeySpec var7 = new SecretKeySpec(var6, "AES");
            Cipher var8 = Cipher.getInstance("AES", "SunJCE");
            byte[] var9 = var0.getBytes();
            var8.init(1, var7);
            var2 = var8.doFinal(var9);
        } catch (NoSuchProviderException var10) {
            var10.printStackTrace();
        } catch (NoSuchAlgorithmException var11) {
            var11.printStackTrace();
        } catch (NoSuchPaddingException var12) {
            var12.printStackTrace();
        } catch (InvalidKeyException var13) {
            var13.printStackTrace();
        } catch (IllegalBlockSizeException var14) {
            var14.printStackTrace();
        } catch (BadPaddingException var15) {
            var15.printStackTrace();
        }

        return var2 == null ? "" : parseByte2HexStr(var2);
    }
    private static String parseByte2HexStr(byte[] var0) {
        StringBuffer var1 = new StringBuffer();

        for(int var2 = 0; var2 < var0.length; ++var2) {
            String var3 = Integer.toHexString(var0[var2] & 255);
            if (var3.length() == 1) {
                var3 = '0' + var3;
            }

            var1.append(var3.toUpperCase());
        }

        return var1.toString();
    }
}
